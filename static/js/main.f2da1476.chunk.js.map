{"version":3,"sources":["logo.svg","header/header.js","resume/resumeData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","Component","imagebaseurl","role","App","header_Header","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8KCCnBC,gMAEjB,IAAIC,EAAaC,KAAKC,MAAMF,WAC5B,OACEG,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAEEH,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QACTJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACNJ,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAaC,KAAK,YAAYC,MAAM,mBAAjD,mBAGAP,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAaC,KAAK,IAAIC,MAAM,mBAAzC,mBAGAP,EAAAC,EAAAC,cAAA,MAAIE,GAAG,MAAMC,UAAU,OACrBL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WACZL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,SAAjC,SAIFN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,UAAjC,UAIFN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,WAAjC,WAIFN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,cAAjC,UAIFN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,iBAAjC,iBAIFN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,YAAjC,aAIE,KAED,IAEPN,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,uBAAd,OAAyCR,EAAWW,MACpDR,EAAAC,EAAAC,cAAA,gCACqBF,EAAAC,EAAAC,cAAA,gCADrB,IACoD,IAClDF,EAAAC,EAAAC,cAAA,2BAFF,QAE+BF,EAAAC,EAAAC,cAAA,2BAF/B,uGAIgC,IAC9BF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,UAAjC,mBALF,iBAQiB,IACfN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,UAAjC,YATF,KAcAN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,UACZL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,KACNN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBAGjBL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,KACNN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,oBAGjBL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,KACNN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,wBAGjBL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,KACNN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBAGjBL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,KACNN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,sBAGjBL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,KACNN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBAGjBL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,KACNN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBAMvBL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,UAC/BN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gCA5GSI,cCIrBZ,EALE,CACfa,aAAc,+BACdF,KAAM,gBACNG,KAAM,sBCcOC,mLARX,OACEZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACW,EAAD,CAAQhB,WAAYA,YAJVY,qBCKEK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACPpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQC,SAAUC,IAChBvB,EAAAC,EAAAC,cAACsB,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f2da1476.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nexport default class Header extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <React.Fragment>\r\n        {/*generated code*/}\r\n        <header id=\"home\">\r\n          <nav id=\"nav-wrap\">\r\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n              Show navigation\r\n            </a>\r\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\r\n              Hide navigation\r\n            </a>\r\n            <ul id=\"nav\" className=\"nav\">\r\n              <li className=\"current\">\r\n                <a className=\"smoothscroll\" href=\"#home\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#resume\">\r\n                  Resume\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#portfolio\">\r\n                  Works\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#testimonials\">\r\n                  Testimonials\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#contact\">\r\n                  Contact\r\n                </a>\r\n              </li>\r\n            </ul>{\" \"}\r\n            {/* end #nav */}\r\n          </nav>{\" \"}\r\n          {/* end #nav-wrap */}\r\n          <div className=\"row banner\">\r\n            <div className=\"banner-text\">\r\n              <h1 className=\"responsive-headline\">I'm {resumeData.name}</h1>\r\n              <h3>\r\n                I'm a Manila based <span>graphic designer</span>,{\" \"}\r\n                <span>illustrator</span> and <span>webdesigner</span> creating\r\n                awesome and effective visual identities for companies of all\r\n                sizes around the globe. Let's{\" \"}\r\n                <a className=\"smoothscroll\" href=\"#about\">\r\n                  start scrolling\r\n                </a>\r\n                and learn more{\" \"}\r\n                <a className=\"smoothscroll\" href=\"#about\">\r\n                  about me\r\n                </a>\r\n                .\r\n              </h3>\r\n              <hr />\r\n              <ul className=\"social\">\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-facebook\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-twitter\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-google-plus\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-linkedin\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-instagram\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-dribbble\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-skype\" />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <p className=\"scrolldown\">\r\n            <a className=\"smoothscroll\" href=\"#about\">\r\n              <i className=\"icon-down-circle\" />\r\n            </a>\r\n          </p>\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","let resumeData = {\r\n  imagebaseurl: \"https://pvbarredo.github.io/\",\r\n  name: \"Peter Barredo\",\r\n  role: \"Frontend Developer\"\r\n};\r\nexport default resumeData;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"./header/header\";\nimport resumeData from \"./resume/resumeData\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}